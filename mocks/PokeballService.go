// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import (
	pokemon "github.com/nathancastelein/go-course-workflows/pokemon"
	mock "github.com/stretchr/testify/mock"
)

// PokeballService is an autogenerated mock type for the PokeballService type
type PokeballService struct {
	mock.Mock
}

// Throw provides a mock function with given fields: trainer, _a1
func (_m *PokeballService) Throw(trainer *pokemon.Trainer, _a1 *pokemon.Pokemon) error {
	ret := _m.Called(trainer, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Throw")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*pokemon.Trainer, *pokemon.Pokemon) error); ok {
		r0 = rf(trainer, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPokeballService creates a new instance of PokeballService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPokeballService(t interface {
	mock.TestingT
	Cleanup(func())
}) *PokeballService {
	mock := &PokeballService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
